{
  "hash": "985e3b40434efce344c84458a9ae336c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Curriculum and Pedagogy\"\nsubtitle: \"useR 2025\"\nauthors: \"Maria Tackett\"\nfooter: \"LINK\"\nlogo: \"\"\nformat: \n  revealjs:\n    theme: ../slides.scss\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:\n      width: 200\n---\n\n\n\n\n# Curriculum\n\n## A modern approach\n\n-   Modern approach to teaching statistics and now the onset of data science\n\n-   How is this different from the traditional approach - the computing is infused throughout\n\n-   Bring in curriculum guidelines - what they are saying about computing\n\n## Curriculum outline\n\n-   Use picture from the DS box intro data science\n\n-   What topics get cut?\n\n-   What are the values of a code-centric approach to teaching coding?\n\n## What about AI?\n\n-   We personally do not advocate AI in the introductory courses as students are learning coding\n\n-   We will take an AI-agnostic approach in this workshop\n\n-   There is some work being done on AI and introductory\n\n    -   Jacob's paper in JSDSE\n\n    -   Other JSDSE papers?\n\n    -   Mine's R blog on learning Pyton\n\n# Pedagogy\n\n## Pedagogy \n\n-   Teaching approach diagram from paper\n\n-   Explain what these are and how they're structured\n\n## Let them eat cake approach\n\n-   Start with the cake then teach students how to make it (Mine's work on this)\n\n## Tidyverse\n\n-   What the tidyverse is and why we'd use it\n\n-   It is readable \"...and then...\" when you read it\n\n## Why tidyverse?\n\n-   Consistent syntax even as you do more advanced things.\n\n-   Tidymodels for modeling.\n\n    -   Inference using `infer`\n\n    -   modeling + machine learning + Bayesian modeling.\n\n-   Same syntax that you'd use to make your materials\n\n-   Accessible documentation and website for packages\n\n## \n\n### The pipe\n\nBefore looking at more data wrangling functions, let's introduce the pipe. The **pipe,** `|>`, is used to pass information from one function to another in the tidyverse. The pipe passes the output of the previous line of code as the first input of the next line of code.\n\nWhen reading code aloud in English, say \"and then\" whenever you see a pipe. Below is a pipeline describing a typical morning.\n\n```         \n find(\"keys\") |>\n  start_car() |>\n  drive(to = \"work\") |>\n  park()\n```\n\n## Palmer penguins \n\nWe will analyze the `penguins` data set from the [**palmerpenguins** R package](https://allisonhorst.github.io/palmerpenguins/) maintained by Dr. Allison Horst. This data set contains measurements and other characteristics for penguins observed near Palmer Station in Antarctica. The data were originally collected by Dr. Kristen Gorman.\n\nThe follow variables are in the data set:\n\n-   `species`: a factor denoting penguin species (Ad√©lie, Chinstrap and Gentoo)\n-   `island`: a factor denoting island in Palmer Archipelago, Antarctica (Biscoe, Dream or Torgersen)\n-   `bill_length_mm`: a number denoting bill length (millimeters)\n-   `bill_depth_mm`: a number denoting bill depth (millimeters)\n-   `flipper_length_mm`: an integer denoting flipper length (millimeters)\n-   `body_mass_g`: an integer denoting body mass (grams)\n-   `sex`: a factor denoting penguin sex (female, male)\n-   `year`: an integer denoting the study year (2007, 2008, or 2009)\n\n## `summarize()`/ `summarise()`\n\n`summarise()` collapses the rows into summary statistics and removes columns irrelevant to the calculation.\n\nLet's take a look at the mean flipper length.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## `filter()`\n\nFilter the data frame by selecting the rows such that the species is `Adelie`.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n### `arrange()`\n\n-   Let's arrange the data by bill length, so the penguins with the shortest bill lengths will be at the top of the data frame.\n\n-   Update code to arrange in descending order\n\n## `group_by()`\n\n`group_by()` is used for grouped operations. It's very powerful when paired with `summarise()` to calculate summary statistics by group.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nUpdate the code below to calculate the mean and standard deviation of flipper length for each species.\n\n## Full pipeline\n\n-   Show it in tidyverse vs. baseR code\n\n## Your turn!\n\n-   Create a new data set that only contains the penguin from each species with the largest body mass. \\[make webr box\\]\n\n-   Open exploration\n\n## Tidyverse beyond the intro course\n\n## Quote from tidyverse paper?\n\n-   Educator's guide to the tidyverse\n\n## Discussion?\n\n## Additional resources\n\n-   tidyverse websites\n\n-   datasciencebox.org\n\n-   instructor tidyverse paper\n\n-   2 data science papers\n\n-   introductory statistics vs. introductory data science?\n\n## \n\n# Infrastructure\n\n## Web-based computing\n\n-   Why use web-based computing rather than local install\n\n    -   local R/ RStudio\n\n    -   Posit Cloud\n\n    -   Docker containers with RStudio license / NC Share\n\n## Docker containers\n\n-   Infrastructure options\n\n-   Brief introduction to Quarto (like an R Markdown file)\n\n-   Make a qmd file . Render it.\n\n-   Turn the qmd into a web-r file.\n",
    "supporting": [
      "02-pedagogy_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}